{
    "title": "SnowflakeDatasource",
    "description": "--Public API--Adds a Snowflake datasource to the data context.\n\nArgs:\n    name: The name of this Snowflake datasource.\n    connection_string: The SQLAlchemy connection string used to connect to the Snowflake database.\n        For example: \"snowflake://<user_login_name>:<password>@<account_identifier>\"\n    assets: An optional dictionary whose keys are TableAsset or QueryAsset names and whose values\n        are TableAsset or QueryAsset objects.",
    "type": "object",
    "properties": {
        "type": {
            "title": "Type",
            "default": "snowflake",
            "enum": [
                "snowflake"
            ],
            "type": "string"
        },
        "name": {
            "title": "Name",
            "type": "string"
        },
        "id": {
            "title": "Id",
            "description": "Datasource id",
            "type": "string",
            "format": "uuid"
        },
        "assets": {
            "title": "Assets",
            "default": [],
            "type": "array",
            "items": {
                "discriminator": {
                    "propertyName": "type",
                    "mapping": {
                        "table": "#/definitions/TableAsset",
                        "query": "#/definitions/QueryAsset"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/definitions/TableAsset"
                    },
                    {
                        "$ref": "#/definitions/QueryAsset"
                    }
                ]
            }
        },
        "connection_string": {
            "title": "Connection String",
            "oneOf": [
                {
                    "$ref": "#/definitions/ConnectionDetails"
                },
                {
                    "type": "string",
                    "writeOnly": true,
                    "format": "uri",
                    "description": "Contains config templates for user:password in a URI to be substituted at runtime. Runtime values will never be serialized.",
                    "pattern": ".*(?<!\\\\)\\$\\{(.*?)\\}|(?<!\\\\)\\$([_a-zA-Z][_a-zA-Z0-9]*).*",
                    "examples": [
                        "snowflake://dickens:${PASSWORD}@host/db/schema",
                        "snowflake://${USER}:${PASSWORD}@host/db/schema"
                    ],
                    "minLength": 1,
                    "maxLength": 65536
                },
                {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 65536,
                    "format": "uri"
                }
            ]
        },
        "create_temp_table": {
            "title": "Create Temp Table",
            "default": false,
            "type": "boolean"
        },
        "kwargs": {
            "title": "Kwargs",
            "description": "Optional dictionary of `kwargs` will be passed to the SQLAlchemy Engine as part of `create_engine(connection_string, **kwargs)`",
            "default": {},
            "type": "object",
            "additionalProperties": {
                "anyOf": [
                    {
                        "type": "string",
                        "writeOnly": true,
                        "format": "password",
                        "description": "Contains config templates to be substituted at runtime. Runtime values will never be serialized.",
                        "pattern": ".*(?<!\\\\)\\$\\{(.*?)\\}|(?<!\\\\)\\$([_a-zA-Z][_a-zA-Z0-9]*).*",
                        "examples": [
                            "hello_${NAME}",
                            "${MY_CFG_VAR}"
                        ]
                    },
                    {}
                ]
            }
        }
    },
    "required": [
        "name",
        "connection_string"
    ],
    "additionalProperties": false,
    "definitions": {
        "Sorter": {
            "title": "Sorter",
            "type": "object",
            "properties": {
                "key": {
                    "title": "Key",
                    "type": "string"
                },
                "reverse": {
                    "title": "Reverse",
                    "default": false,
                    "type": "boolean"
                }
            },
            "required": [
                "key"
            ]
        },
        "PartitionerColumnValue": {
            "title": "PartitionerColumnValue",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_column_value",
                    "enum": [
                        "partition_on_column_value"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ]
        },
        "PartitionerMultiColumnValue": {
            "title": "PartitionerMultiColumnValue",
            "type": "object",
            "properties": {
                "column_names": {
                    "title": "Column Names",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_multi_column_values",
                    "enum": [
                        "partition_on_multi_column_values"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_names"
            ]
        },
        "PartitionerDividedInteger": {
            "title": "PartitionerDividedInteger",
            "type": "object",
            "properties": {
                "divisor": {
                    "title": "Divisor",
                    "type": "integer"
                },
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_divided_integer",
                    "enum": [
                        "partition_on_divided_integer"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "divisor",
                "column_name"
            ]
        },
        "PartitionerModInteger": {
            "title": "PartitionerModInteger",
            "type": "object",
            "properties": {
                "mod": {
                    "title": "Mod",
                    "type": "integer"
                },
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_mod_integer",
                    "enum": [
                        "partition_on_mod_integer"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "mod",
                "column_name"
            ]
        },
        "ColumnPartitionerYearly": {
            "title": "ColumnPartitionerYearly",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year",
                    "enum": [
                        "partition_on_year"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ]
        },
        "ColumnPartitionerMonthly": {
            "title": "ColumnPartitionerMonthly",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month",
                    "enum": [
                        "partition_on_year_and_month"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ]
        },
        "ColumnPartitionerDaily": {
            "title": "ColumnPartitionerDaily",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_year_and_month_and_day",
                    "enum": [
                        "partition_on_year_and_month_and_day"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "column_name"
            ]
        },
        "PartitionerDatetimePart": {
            "title": "PartitionerDatetimePart",
            "type": "object",
            "properties": {
                "datetime_parts": {
                    "title": "Datetime Parts",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_date_parts",
                    "enum": [
                        "partition_on_date_parts"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "datetime_parts",
                "column_name"
            ]
        },
        "PartitionerConvertedDatetime": {
            "title": "PartitionerConvertedDatetime",
            "type": "object",
            "properties": {
                "column_name": {
                    "title": "Column Name",
                    "type": "string"
                },
                "sort_ascending": {
                    "title": "Sort Ascending",
                    "default": true,
                    "type": "boolean"
                },
                "method_name": {
                    "title": "Method Name",
                    "default": "partition_on_converted_datetime",
                    "enum": [
                        "partition_on_converted_datetime"
                    ],
                    "type": "string"
                },
                "date_format_string": {
                    "title": "Date Format String",
                    "type": "string"
                }
            },
            "required": [
                "column_name",
                "date_format_string"
            ]
        },
        "BatchDefinition_Union_PartitionerColumnValue__PartitionerMultiColumnValue__PartitionerDividedInteger__PartitionerModInteger__ColumnPartitionerYearly__ColumnPartitionerMonthly__ColumnPartitionerDaily__PartitionerDatetimePart__PartitionerConvertedDatetime__": {
            "title": "BatchDefinition[Union[PartitionerColumnValue, PartitionerMultiColumnValue, PartitionerDividedInteger, PartitionerModInteger, ColumnPartitionerYearly, ColumnPartitionerMonthly, ColumnPartitionerDaily, PartitionerDatetimePart, PartitionerConvertedDatetime]]",
            "description": "--Public API--Configuration for a batch of data.\n\nReferences the DataAsset to be used, and any additional parameters needed to fetch the data.",
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "string"
                },
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "partitioner": {
                    "title": "Partitioner",
                    "anyOf": [
                        {
                            "$ref": "#/definitions/PartitionerColumnValue"
                        },
                        {
                            "$ref": "#/definitions/PartitionerMultiColumnValue"
                        },
                        {
                            "$ref": "#/definitions/PartitionerDividedInteger"
                        },
                        {
                            "$ref": "#/definitions/PartitionerModInteger"
                        },
                        {
                            "$ref": "#/definitions/ColumnPartitionerYearly"
                        },
                        {
                            "$ref": "#/definitions/ColumnPartitionerMonthly"
                        },
                        {
                            "$ref": "#/definitions/ColumnPartitionerDaily"
                        },
                        {
                            "$ref": "#/definitions/PartitionerDatetimePart"
                        },
                        {
                            "$ref": "#/definitions/PartitionerConvertedDatetime"
                        }
                    ]
                }
            },
            "required": [
                "name"
            ]
        },
        "TableAsset": {
            "title": "TableAsset",
            "description": "--Public API--A class representing a table from a SQL database\n\nArgs:\n    table_name: The name of the database table to be added\n    schema_name: The name of the schema containing the database table to be added.",
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "type": {
                    "title": "Type",
                    "default": "table",
                    "enum": [
                        "table"
                    ],
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "description": "DataAsset id",
                    "type": "string",
                    "format": "uuid"
                },
                "order_by": {
                    "title": "Order By",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Sorter"
                    }
                },
                "batch_metadata": {
                    "title": "Batch Metadata",
                    "type": "object"
                },
                "batch_definitions": {
                    "title": "Batch Definitions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchDefinition_Union_PartitionerColumnValue__PartitionerMultiColumnValue__PartitionerDividedInteger__PartitionerModInteger__ColumnPartitionerYearly__ColumnPartitionerMonthly__ColumnPartitionerDaily__PartitionerDatetimePart__PartitionerConvertedDatetime__"
                    }
                },
                "table_name": {
                    "title": "Table Name",
                    "description": "Name of the SQL table. Will default to the value of `name` if not provided.",
                    "default": "",
                    "type": "string"
                },
                "schema_name": {
                    "title": "Schema Name",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "additionalProperties": false
        },
        "QueryAsset": {
            "title": "QueryAsset",
            "description": "--Public API--An asset made from a SQL query\n\nArgs:\n    query: The query to be used to construct the underlying Data Asset",
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "type": {
                    "title": "Type",
                    "default": "query",
                    "enum": [
                        "query"
                    ],
                    "type": "string"
                },
                "id": {
                    "title": "Id",
                    "description": "DataAsset id",
                    "type": "string",
                    "format": "uuid"
                },
                "order_by": {
                    "title": "Order By",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Sorter"
                    }
                },
                "batch_metadata": {
                    "title": "Batch Metadata",
                    "type": "object"
                },
                "batch_definitions": {
                    "title": "Batch Definitions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BatchDefinition_Union_PartitionerColumnValue__PartitionerMultiColumnValue__PartitionerDividedInteger__PartitionerModInteger__ColumnPartitionerYearly__ColumnPartitionerMonthly__ColumnPartitionerDaily__PartitionerDatetimePart__PartitionerConvertedDatetime__"
                    }
                },
                "query": {
                    "title": "Query",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "query"
            ],
            "additionalProperties": false
        },
        "ConnectionDetails": {
            "title": "ConnectionDetails",
            "description": "Information needed to connect to a Snowflake database.\nAlternative to a connection string.\n\nhttps://docs.snowflake.com/en/developer-guide/python-connector/sqlalchemy#additional-connection-parameters",
            "type": "object",
            "properties": {
                "account": {
                    "title": "AccountIdentifier",
                    "type": "string",
                    "description": "Snowflake Account identifiers can be in one of two formats: <orgname>-<account_name> or <account_locator>.<region>.<cloud>",
                    "pattern": "^(?P<orgname>[a-zA-Z0-9]+)[-](?P<account_name>[a-zA-Z0-9-_]+)$|^(?P<account_locator>[a-zA-Z0-9]+)\\.(?P<region>[a-zA-Z0-9-]+)\\.(?P<cloud>aws|gcp|azure)$",
                    "examples": [
                        "myOrg-my_account",
                        "myOrg-my-account",
                        "abc12345.us-east-1.aws"
                    ]
                },
                "user": {
                    "title": "User",
                    "type": "string"
                },
                "password": {
                    "title": "Password",
                    "anyOf": [
                        {
                            "type": "string",
                            "writeOnly": true,
                            "format": "password",
                            "description": "Contains config templates to be substituted at runtime. Runtime values will never be serialized.",
                            "pattern": ".*(?<!\\\\)\\$\\{(.*?)\\}|(?<!\\\\)\\$([_a-zA-Z][_a-zA-Z0-9]*).*",
                            "examples": [
                                "hello_${NAME}",
                                "${MY_CFG_VAR}"
                            ]
                        },
                        {
                            "type": "string"
                        }
                    ]
                },
                "database": {
                    "title": "Database",
                    "description": "`database` that the Datasource is mapped to.",
                    "type": "string"
                },
                "schema": {
                    "title": "Schema",
                    "description": "`schema` that the Datasource is mapped to.",
                    "type": "string"
                },
                "warehouse": {
                    "title": "Warehouse",
                    "type": "string"
                },
                "role": {
                    "title": "Role",
                    "type": "string"
                },
                "numpy": {
                    "title": "Numpy",
                    "default": false,
                    "type": "boolean"
                }
            },
            "required": [
                "account",
                "user",
                "password",
                "database",
                "schema",
                "warehouse",
                "role"
            ],
            "additionalProperties": false
        }
    }
}
